{"version":3,"sources":["components/TodoApp.js","components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","App.js","index.js"],"names":["TodoApp","onSubmit","useState","value","setValue","className","ev","preventDefault","length","type","name","placeholder","autoComplete","onChange","target","TodoItem","todo","onToggle","onDelete","title","id","completed","key","checked","onClick","TodoList","todos","map","TodosFilter","handleShowAll","handleShowActive","handleShowCompleted","isAllSelected","setIsAllSelected","isActiveSelected","setIsActiveSelected","isCompletedSelected","setIsCompletedSelected","href","App","setTodos","isAllTrue","setIsAllTrue","filteredTodos","setFilteredTodos","isFiltered","setIsFiltered","useEffect","todoText","Date","htmlFor","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.275bc523.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoApp = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (ev) => {\n    setValue(ev.target.value);\n  };\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n\n    if (value.length === 0) {\n      return;\n    }\n\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <form className=\"NewTodoForm\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        name=\"title\"\n        placeholder=\"What needs to be done?\"\n        autoComplete=\"off\"\n        value={value}\n        onChange={handleChange}\n      />\n    </form>\n  );\n};\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, onToggle, onDelete }) => {\n  const { title, id, completed } = todo;\n\n  return (\n    <li key={id} className={completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={!!completed}\n          onChange={() => onToggle(id)}\n        />\n\n        <label>{title}</label>\n\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => onDelete(title)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  }).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ todos, onToggle, onDelete }) => (\n  <ul className=\"todo-list\">\n    {[...todos].map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        onToggle={onToggle}\n        onDelete={onDelete}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  })).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodosFilter = ({\n  handleShowAll,\n  handleShowActive,\n  handleShowCompleted,\n}) => {\n  const [isAllSelected, setIsAllSelected] = useState(true);\n  const [isActiveSelected, setIsActiveSelected] = useState(false);\n  const [isCompletedSelected, setIsCompletedSelected] = useState(false);\n\n  const showAll = () => {\n    setIsAllSelected(true);\n    setIsActiveSelected(false);\n    setIsCompletedSelected(false);\n    handleShowAll();\n  };\n\n  const showActive = () => {\n    setIsActiveSelected(true);\n    setIsAllSelected(false);\n    setIsCompletedSelected(false);\n    handleShowActive();\n  };\n\n  const showCompleted = () => {\n    setIsCompletedSelected(true);\n    setIsActiveSelected(false);\n    setIsAllSelected(false);\n    handleShowCompleted();\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={isAllSelected ? 'selected' : ''}\n          onClick={showAll}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={isActiveSelected ? 'selected' : ''}\n          onClick={showActive}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={isCompletedSelected ? 'selected' : ''}\n          onClick={showCompleted}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  handleShowAll: PropTypes.func.isRequired,\n  handleShowActive: PropTypes.func.isRequired,\n  handleShowCompleted: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [isAllTrue, setIsAllTrue] = useState(false);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [isFiltered, setIsFiltered] = useState(false);\n\n  useEffect(() => {\n\n  }, [todos]);\n\n  const handleSubmit = (todoText) => {\n    setTodos([\n      ...todos,\n      { completed: false, id: +new Date(), title: todoText },\n    ]);\n  };\n\n  const handleToggleAll = () => {\n    if (isAllTrue) {\n      setTodos([...todos].map(todo => (\n        { ...todo, completed: false }\n      )));\n      setIsAllTrue(false);\n    } else {\n      setTodos([...todos].map(todo => (\n        { ...todo, completed: true }\n      )));\n      setIsAllTrue(true);\n    }\n  };\n\n  const handleToggle = (id) => {\n    setTodos([...todos].map(\n      todo => (todo.id === id\n        ? { ...todo, completed: !todo.completed }\n        : todo),\n    ));\n  };\n\n  const handleDelete = (title) => {\n    setTodos([...todos].filter(todo => todo.title !== title));\n  };\n\n  const handleClear = () => {\n    setTodos([...todos].filter(todo => !todo.completed));\n  };\n\n  const handleShowAll = () => {\n    setIsFiltered(false);\n  };\n\n  const handleShowCompleted = () => {\n    setIsFiltered(true);\n    setFilteredTodos([...todos].filter(todo => todo.completed));\n  };\n\n  const handleShowActive = () => {\n    setIsFiltered(true);\n    setFilteredTodos([...todos].filter(todo => !todo.completed));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <TodoApp onSubmit={handleSubmit} />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onClick={handleToggleAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          todos={isFiltered\n            ? filteredTodos\n            : todos}\n          onToggle={handleToggle}\n          onDelete={handleDelete}\n        />\n\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {[...todos].filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n\n        <TodosFilter\n          handleShowAll={handleShowAll}\n          handleShowCompleted={handleShowCompleted}\n          handleShowActive={handleShowActive}\n        />\n\n        {/* <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\" onClick={handleShowAll}>All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\" onClick={handleShowActive}>Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\" onClick={handleShowCompleted}>Completed</a>\n          </li>\n        </ul> */}\n\n        <button type=\"button\" className=\"clear-completed\" onClick={handleClear}>\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}